---
title:  "Reflections on Pauline Oliveros and Software in Art"
date:   2016-12-12
categories: blog
layout: post
---


The composer Pauline Oliveros, who passed away recently at the age of 84, leaves behind a many-threaded legacy of musical adventuring amid vigorous support for colleagues, as Geeta Dayal [documents](https://frieze.com/article/pauline-oliveros-1932-2016) in an obituary for *Frieze*. In all these pursuits, and in her [writing](http://query.nytimes.com/mem/archive/pdf?res=9E01EEDE143CE531A15750C1A96F9C946190D6CF), Oliveros' voice was harsh in its directness and uplifting in its clarity — the fruit of a rare commitment to distilling avant-garde ambitions into simple vessels. Her series of "sonic meditations" makes that effort particularly apparent. In these poetically honed written works, she addresses the reader with instructions that, when followed by a group, bring the musical piece into being and the participant listeners into transformative states of awareness. I first learned about Oliveros in an intro computer music course when we performed one of these pieces, *Teach Yourself to Fly*.

> Teach Yourself To Fly
>
> *dedicated to Amelia Earhart*
>
> Any number of persons sit in a circle facing the center. Illuminate the space with dim blue light. Begin by simply observing your own breathing. Always be an observer. Gradually allow your breathing to become audible. Then gradually introduce your voice. Allow your vocal cords to vibrate in any mode which occurs naturally. Allow the intensity of the vibrations to increase very slowly. Continue as long as possible, naturally, and until all others are quiet, always observing your own breath cycle. Variation: translate voice to an instrument.

Both times I've taken part in *Teach Yourself to Fly*, I've felt the piece operating on me at a level untapped by any other musical experience. Nodes dedicated to breathing, vocalizing, listening, and social interrelation were all pulled up from the tangle of my brain, which slowly reorganized itself around them. I was floored that the piece could achieve such a deep-reaching effect and such a complex sound structure through just a few carefully worded instructions. It was only later, when considering Oliveros' work alongside more recent projects in interactive music, that I saw her text scores as a revelatory move for composition in the era of computational media. Like a software program, a sonic meditation was composed of instructions. A program only takes its intended shape at the moment of its execution by the host environment, whose condition affects and is changed by the process of interpreting those instructions. Oliveros sculpted her sonic meditations from the same material as software, but located her process in the consciousness of her listeners. In doing so, she crafted a tool for resisting the pull of computation toward displays of power and for holding on to the promise of interpretation as the act that artists can imbue with the richest substance.

In an essay titled "Software for People," Oliveros describes a turning point in her artistic trajectory: a refining of the sonic meditations practice toward the goal of training other musicians to modulate their attention between "global" and "focal" states. The title on its own points out that her sonic meditation pieces are of the same stuff as computer code, and she refers in the essay to her piece as a "program" for the high school woodwind section performing it. More significantly, she notes that the "program allows for failures in the system to have a positive function." In her compositions, Oliveros cared less about the eventual output — the audible result of a program's execution — and more about the transformation of the interpreter. As Kerry O'Brien [writes](http://www.newyorker.com/culture/culture-desk/listening-as-activism-the-sonic-meditations-of-pauline-oliveros),

> In these works, experiments were not conducted on the music; the music was an experiment on the self. Anyone searching today for the complete box set of "Sonic Meditations" won't find it, because, as the composer wrote, "music is a welcome by-product" of this composition. The experiments remain in each listener.

At its core, computation offers artists control over an instruction-interpreter that makes no errors and that can translate measurement into action at speeds outside the grasp of human comprehension. It makes sense, then, that many software-based artworks have focused on harnessing those new capacities for responsiveness and multiplicity toward their intuited ends of producing delight or awe in the audience. These works, even the ones we might describe as interactive or participatory, use machine-executed processes to impress a sensation upon the human subject. Oliveros, in marking her text scores as "software for people," mapped out a very different agenda for works that center on the following of instructions: the phrase "for people" at once moves interpretation from the machine to the person and remakes the configuration between piece and listener as *for* rather than *upon*. In her emphasis on attention, Oliveros uses keywords ("global", "state") that crop up early on in most computer science courses; what unites these terms is that they don't describe the output of a process but rather denote the nature of its enactment inside the machine.

Oliveros' notion of "software for people" imparts to computational art the principle that interpretation itself is a more fertile ground for transformation than the output of an interpreted process. Her example asks us to resist the tendency of computational media to conceal the interpretation at work inside the machine and to bring the viewer or listener into a process of co-interpretation — rather than just interaction — with the piece. She paved the way for artists to use instructions as a material addressed in tandem to listeners and to machines. With the same strokes, she made a convincing case for sound as the vehicle through which that process of simultaneously interpreting instructions and experiencing their result could best occur.

One recent work that deploys the above principle particularly well is Reiko Yamada's [*Reflective*](http://www.reikoyamada.com/Reiko_Yamada/Reflective.html). Yamada's interactive musical work takes a new form in each of its installations, with different audio samples and new settings for the listener inspired by the site, but at its consistent base is a project of ushering the listener into a state of reflection on choice and consequence. In an installation of the piece in Cambridge, Mass. earlier this year, Yamada set up a dark, curtained-off space for listeners to enter one at a time into their encounters with the motion-tracking sound piece. She explains that she hoped the darkness would deter gallery-goers from a certain attitude toward the piece: many of us first approach an interactive work with an urge to test the extent and parameters of our influence in the system. In contrast to that frantic mode of scrambling for control, Yamada wanted her listeners to be listeners — to make slow and thoughtful movements and to follow the music into a state of meditation and decision.

In the hallway leading up to that listening chamber, the first wall displayed a diagram of the space, surrounded by instructions. "1. Enter the circle, slowly, alone," they began, and shifted subtly from physical directions into primers for the intended state of mind: "Each decision leaves traces on your sonice experience.... These traces are your own, imperfect as they may be." The second wall, surprisingly, was crammed with snippets of code and connective lines routing motion sensor inputs to Max/MSP objects. This laying bare of *Reflective*'s software structure seemed, at first, out of keeping with Yamada's goal to steer visitors away from approaching the piece as an instrument. Then again, if visitors were to follow certain directions, why shouldn't they get the full set — including the ones a computer would follow to co-create their experience? The visibility of these symbols as a sketch, as work-in-progress notation, replaced any sense of the piece's software component as a sleek black box with an impression of a loose, imperfect cluster of inputs and effects. Most importantly, it emphasized that the unseen part of the piece was formed out of instructions, the same kind of stuff with which the visitors themselves had just been outfitted. Exposing the algorithmic insides of her piece thus made perfect sense as a way for Yamada to beckon visitors away from a power relationship with the piece and onto a stage of active listening.

Despite their shared goal of shaping their listeners' attention in sound, brought about in part by each musician's experience with Buddhist meditation practice, no explicit link connects Yamada's *Reflective* to Oliveros' work. Yet Yamada's computer-reliant interactive piece evokes to a striking degree the aims of the low-tech sonic meditations; and in so doing, it proves how forward-looking Oliveros was with that body of work. "Software for people," we can be sure, didn't merely explain an existing process; it set a call for those who would be creating work in situations that had yet to come.

Oliveros, an artist working outside of computation yet keenly and proactively aware of its entrance into her field, supplied us with a question that we should hold up to all software-based artworks. The question, characteristically for Oliveros, is concise yet loaded with unfolding substance: *Is this software for people?* Often in new media art, the software component of a piece is designed to hide itself from sight, maintaining a powerful inscrutability as it reacts to or acts upon an audience. Works like *Reflective* cast aside the promise of power that attends computational media, instead seizing on these materials as opportunities to involve people in new interpretive situations. For artists working in software, the fact that instructions and their interpretation underly it all becomes quickly mundane among all the intricacies and layers of abstraction involved in writing code. It's hard to retain a sense of that fact as remarkable at all, let alone to feel that the interpretation of instructions is a far greater site for groundbreaking artistic work than the upper reaches of algorithmic feats like simulation or streaming data. I know that for me, at least, Pauline Oliveros will continue on as the most potent reminder of that truth for a long time coming.
